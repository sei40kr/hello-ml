#+begin_src jupyter-python :session py :async yes
def AND(x1, x2):
    w1, w2, theta = 0.5, 0.5, 0.7
    tmp = x1 * w1 + x2 * w2

    if tmp <= theta:
        return 0
    else:
        return 1
#+end_src

#+RESULTS:

#+begin_src jupyter-python :session py :async yes
AND(0, 0)
#+end_src

#+RESULTS:
: 0

#+begin_src jupyter-python :session py :async yes
AND(1, 0)
#+end_src

#+RESULTS:
: 0

#+begin_src jupyter-python :session py :async yes
AND(0, 1)
#+end_src

#+RESULTS:
: 0

#+begin_src jupyter-python :session py :async yes
AND(1, 1)
#+end_src

#+RESULTS:
: 1

#+begin_src jupyter-python :session py :async yes
import numpy as np

x = np.array([0, 1])
w = np.array([0.5, 0.5])
b = -0.7

w * x
#+end_src

#+RESULTS:
: array([0. , 0.5])

#+begin_src jupyter-python :session py :async yes
np.sum(w * x)
#+end_src

#+RESULTS:
: 0.5

#+begin_src jupyter-python :session py :async yes
np.sum(w * x) + b
#+end_src

#+RESULTS:
: -0.19999999999999996

#+begin_src jupyter-python :session py :async yes
def AND(x1, x2):
    x = np.array([x1, x2])
    w = np.array([0.5, 0.5])
    b = -0.7

    tmp = np.sum(w * x) + b
    if tmp <= 0:
        return 0
    else:
        return 1
#+end_src

#+RESULTS:

#+begin_src jupyter-python :session py :async yes
def NAND(x1, x2):
    x = np.array([x1, x2])
    w = np.array([-0.5, -0.5])
    b = 0.7

    tmp = np.sum(w * x) + b
    if tmp <= 0:
        return 0
    else:
        return 1


def OR(x1, x2):
    x = np.array([x1, x2])
    w = np.array([0.5, 0.5])
    b = -0.2

    tmp = np.sum(w * x) + b
    if tmp <= 0:
        return 0
    else:
        return 1
#+end_src

#+RESULTS:

#+begin_src jupyter-python :session py :async yes
def XOR(x1, x2):
    s1 = NAND(x1, x2)
    s2 = OR(x1, x2)
    y = AND(s1, s2)
    return y
#+end_src

#+RESULTS:

#+begin_src jupyter-python :session py :async yes
XOR(0, 0)
#+end_src

#+RESULTS:
: 0

#+begin_src jupyter-python :session py :async yes
XOR(1, 0)
#+end_src

#+RESULTS:
: 1

#+begin_src jupyter-python :session py :async yes
XOR(0, 1)
#+end_src

#+RESULTS:
: 1

#+begin_src jupyter-python :session py :async yes
XOR(1, 1)
#+end_src

#+RESULTS:
: 0
